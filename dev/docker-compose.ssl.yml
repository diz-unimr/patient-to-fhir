version: "3.7"

services:

  zoo:
    restart: unless-stopped
    image: confluentinc/cp-zookeeper:5.5.2
    ports:
      - 2181:2181
      - 2182:2182
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_AUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zoo:2888:3888
      ZOOKEEPER_SSL_CLIENT_AUTH: need
      ZOOKEEPER_SSL_KEYSTORE_TYPE: JKS
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ssl-test
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ssl-test
      ZOOKEEPER_SSL_KEY_PASSWORD: ssl-test
      ZOOKEEPER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets

  kafka:
    image: confluentinc/cp-kafka:5.5.2
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo:2182
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: "true"
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ssl-test
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: JKS
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ssl-test
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_ZOOKEEPER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://127.0.0.1:9092
      #      KAFKA_ADVERTISED_LISTENERS: SSL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      #      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: INTERNAL
      KAFKA_SSL_PROTOCOL: TLSv1.2
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ssl-test
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ssl-test
      KAFKA_SSL_KEY_PASSWORD: ssl-test
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets
    depends_on:
      - zoo

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.2
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: SSL://kafka:19092
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SSL
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: ssl-test
      KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: ssl-test
      KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: ssl-test
      KAFKA_REST_CLIENT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets
    depends_on:
      - zoo
      - kafka

  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.5.2
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:19092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: ssl-test
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      CONNECT_SSL_KEYSTORE_PASSWORD: ssl-test
      CONNECT_SSL_KEY_PASSWORD: ssl-test
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SSL
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: ssl-test
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: ssl-test
      CONNECT_CONSUMER_SSL_KEY_PASSWORD: test-key-password
      CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SSL
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: ssl-test
      CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: ssl-test
      CONNECT_PRODUCER_SSL_KEY_PASSWORD: ssl-test
      CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets
    depends_on:
      - zoo
      - kafka
      - kafka-rest-proxy

  connect-patient:
    image: byrnedo/alpine-curl:0.1.8
    command: -i -X POST -H "Accept:application/json"
      -H "Content-Type:application/json"
      -d @/connect/connect-patient.json
      --retry-connrefused
      --connect-timeout 10
      --max-time 100
      --retry 10
      --retry-delay 10
      http://kafka-connect:8083/connectors/
    volumes:
      - ./connect/connect-patient.json:/connect/connect-patient.json:ro
    depends_on:
      - kafka-connect
      - aim-db

  fhir-pseudonymizer:
    image: registry.diz.uni-marburg.de/docker/fhir-pseudonymizer:1.6.0
    environment:
      GPAS__URL: ${GPAS_URL:-http://gpas:8080/gpas/gpasService}
    volumes:
      - ./anonymization.yaml:/etc/anonymization.yaml:ro
    ports:
      - 5000:8080
    depends_on:
      - gpas

  gpas:
    image: tmfev/gpas:1.9.1
    environment:
      JAVA_OPTS: >-
        -Xms512m
        -Xmx1G
        -XX:MetaspaceSize=96M
        -XX:MaxMetaspaceSize=256m
        -Djava.net.preferIPv4Stack=true
        -Djava.awt.headless=true

  gpasinit-patient:
    image: curlimages/curl:7.75.0
    command: |
      -X POST
      -H 'Content-Type:application/xml'
      -d '<?xml version="1.0" encoding="UTF-8"?>
          <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:psn="http://psn.ttp.ganimed.icmvc.emau.org/">
            <soapenv:Header/>
              <soapenv:Body>
                <psn:addDomain>
                  <domainDTO>
                    <name>PATIENT</name>
                    <checkDigitClass>org.emau.icmvc.ganimed.ttp.psn.generator.ReedSolomonLagrange</checkDigitClass>
                    <alphabet>org.emau.icmvc.ganimed.ttp.psn.alphabets.Symbol31</alphabet>
                    <properties>PSN_LENGTH=31;PSN_PREFIX=p;INCLUDE_PREFIX_IN_CHECK_DIGIT_CALCULATION=false;PSNS_DELETABLE=true;MAX_DETECTED_ERRORS=2;</properties>
                    <comment>PATIENT Domain</comment>
                  </domainDTO>
                </psn:addDomain>
            </soapenv:Body>
          </soapenv:Envelope>'
      --retry-connrefuse
      --connect-timeout 10
      --max-time 120
      --retry 10
      --retry-delay 10
      http://gpas:8080/gpas/DomainService
    depends_on:
      - gpas

  aim-db:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=aim
      - POSTGRES_PASSWORD=test
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d:ro


  akhq:
    image: tchiotludo/akhq:0.17.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: kafka:19092
                security.protocol: SSL
                ssl.truststore.location: /etc/kafka/secrets/kafka.truststore.jks
                ssl.truststore.password: ssl-test
                ssl.keystore.location: /etc/kafka/secrets/kafka.keystore.jks
                ssl.keystore.password: ssl-test
                ssl.key.password: ssl-test
                ssl.endpoint.identification.algorithm: ""
              connect:
                - name: "connect"
                  url: "http://kafka-connect:8083"
    ports:
      - 8080:8080
    volumes:
      - ./ssl:/etc/kafka/secrets
    depends_on:
      - zoo
      - kafka

