plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id "jacoco"
}

group = 'de.unimarburg.diz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

ext {
    set('springCloudVersion', "2023.0.1")
    set("hapiFhirVersion", "7.0.2")
    set('testContainersVersion', '1.19.7')
}

dependencies {
    // spring cloud stream kafka
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
    implementation "org.springframework.kafka:spring-kafka"

    // metrics
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.5'

    // mapper
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // hapi fhir
    implementation "ca.uhn.hapi.fhir:hapi-fhir-base:$hapiFhirVersion"

    implementation "ca.uhn.hapi.fhir:hapi-fhir-client:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-validation:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-validation-resources-r4:$hapiFhirVersion"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-caching-caffeine:$hapiFhirVersion"
    implementation 'org.miracum:kafka-fhir-serializer:1.0.5'

    // unit tests
    testImplementation 'org.springframework.cloud:spring-cloud-stream'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.7.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.assertj:assertj-core:3.25.3'

    // integration tests
    intTestImplementation 'org.springframework.kafka:spring-kafka-test'
    intTestImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    intTestImplementation "org.testcontainers:kafka:$testContainersVersion"
    intTestImplementation "org.testcontainers:postgresql:$testContainersVersion"
    intTestImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    intTestImplementation 'org.awaitility:awaitility:4.2.1'
    intTestImplementation 'org.assertj:assertj-core:3.25.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
}

check.dependsOn jacocoTestReport

jar {
    enabled = false
}

bootJar {
    mainClass.set('de.unimarburg.diz.patienttofhir.PatientToFhirApplication')
}